{% if section.settings.enable_announcement == false or template.name == 'index' %}
  {{ 'announcement.css' | asset_url | preload_tag: as: 'style' }}
  {{ 'announcement.css' | asset_url | stylesheet_tag }}

  {% capture announcement_content %}
    {% if section.blocks.size > 0 %}
    {% for block in section.blocks %}
      {% if block.settings.announcement_text != blank %}
        <div data-slide="{{ forloop.index0 }}" {{ block.shopify_attributes }} id="block-{{ block.id }}" class="announcement-bar-item" {% if section.settings.block_color and section.settings.layout_type == "carousel" %} data-color="{{ block.settings.text_color }}" data-bg="{{ block.settings.background_color }}"  data-link="{{ block.settings.link_color }}" {% endif %}> 
          <div class="announcement-bar-text">{{ block.settings.announcement_text }}</div>
        </div>
      {% endif %}
    {% endfor %}
    {% endif %}
  {% endcapture %}

  <div class="section-container{% if section.settings.block_color and section.settings.layout_type == 'carousel'%} announcement-bar-main{% endif %} scheme-{{ section.settings.color_scheme }}"
    {% if section.settings.block_color and section.settings.layout_type == 'carousel' %}
      style="--announcement-bar-background:{{ section.blocks.first.settings.background_color }}; --announcement-bar-color:{{ section.blocks.first.settings.text_color }}; --announcement-bar-link-color:{{ section.blocks.first.settings.link_color }};"
    {% endif %}
  >
    <div
      class="announcement-bar-inner {% if section.settings.layout_type == "marquee" %} announcement-bar-marquee {{ section.settings.direction }}-direction {% else %} announcement-bar-carousel {% endif %}"
      {% if section.settings.layout_type == 'marquee' %}
        autoplay-infinite data-marquee-speed="{{ section.settings.scrolling_speed }}"
        data-marquee-speed-mobile="{{ section.settings.scrolling_speed_mobile }}" data-marquee-text
      {% endif %}
    >
      {% if section.settings.layout_type == 'marquee' %}
        {% if announcement_content != blank %}
          {% for i in (1..5) %}
            <div data-marque-node>
              {{ announcement_content }}
            </div>
          {% endfor %}
        {% endif %}
      {% else %}
        {% if announcement_content != blank %}
          <div
            id="announcement-slider-{{ section.id }}"
            class="slider announcement-slider {% if section.settings.block_color and section.settings.layout_type == "carousel" %} carousel-block-color-true{% endif %}"
            {% if section.settings.layout_type == 'carousel' and section.blocks.size > 1 %}
              data-slick='
                {
                "slidesToShow": 1,
                "lazyLoad": "progressive",
                "cssEase": "ease-in-out",
                "infinite":true,
                "autoplay": {%- if section.settings.autorotate -%}true{%- else -%}false{%- endif -%},
                "autoplaySpeed": {{ section.settings.interval | times: 1000 }},
                "arrows": true,
                "dots": false
                }
              '
            {% endif %}
          >
            {{ announcement_content }}
          </div>
        {% endif %}
      {% endif %}
    </div>
  </div>
  <style>
    #announcement-slider-{{ section.id }} .slick-slide {
      display: inline-block;
      vertical-align: middle;
      float: none;
    }
  </style>

  <script>
    function announementHeight() {
      let scrollTop = window.scrollY;
      let announcementSection = document.querySelector('.announcement-bar');
      if (!announcementSection) return false;
      setTimeout(() => {
        let annoucementHeight = announcementSection.offsetHeight;
        let scrollTop = window.scrollY;
        if (scrollTop > annoucementHeight) {
          document.querySelector('body').style.setProperty('--dynamic-announcement-height', `0px`);
        } else {
          let annouceHeight = Math.max(annoucementHeight - scrollTop, 0);
          document.querySelector('body').style.setProperty('--dynamic-announcement-height', `${annouceHeight}px`);
        }
      }, 500);
      window.addEventListener('scroll', function () {
        setTimeout(() => {
          let annoucementHeight = announcementSection.offsetHeight;
          if (scrollTop > annoucementHeight) {
            document.querySelector('body').style.setProperty('--dynamic-announcement-height', `0px`);
          } else {
            let annouceHeight = Math.max(annoucementHeight - scrollTop, 0);
            document.querySelector('body').style.setProperty('--dynamic-announcement-height', `${annouceHeight}px`);
          }
        }, 200);
        scrollTop = window.scrollY;
      });
    }
    window.addEventListener('resize', announementHeight, false);
    document.addEventListener('DOMContentLoaded', announementHeight, false);
    if(Shopify.designMode){
      document.addEventListener('shopify:section:load', announementHeight, false);
      document.addEventListener('shopify:section:unload', announementHeight, false);
    }
  </script>
  
{% endif %}
{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "class": "announcement-bar",
  "max_blocks": 3,
  "disabled_on": {
    "groups": ["footer"]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_announcement",
      "label": "t:sections.announcement-bar.settings.enable_announcement.label",
      "default": true
    },
    {
      "type": "select",
      "id": "layout_type",
      "label": "t:sections.announcement-bar.settings.layout_type.label",
      "default": "carousel",
      "options": [
        {
          "value": "marquee",
          "label": "t:sections.announcement-bar.settings.layout_type.marquee.label"
        },
        {
          "value": "carousel",
          "label": "t:sections.announcement-bar.settings.layout_type.carousel.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:global.header.marquee_section.label"
    },
    {
      "type": "select",
      "id": "direction",
      "label": "t:global.common.marquee_direction.label",
      "options": [
        {
          "value": "rtl",
          "label": "t:global.common.marquee_direction.options.rtl"
        },
        {
          "value": "ltr",
          "label": "t:global.common.marquee_direction.options.ltr"
        }
      ],
      "default": "rtl"
    },
    {
      "type": "range",
      "id": "scrolling_speed",
      "label": "t:global.common.marquee_speed.desktop.label",
      "min": 5,
      "max": 100,
      "unit": "s",
      "default": 49,
      "step": 1
    },
    {
      "type": "range",
      "id": "scrolling_speed_mobile",
      "label": "t:global.common.marquee_speed.mobile.label",
      "min": 5,
      "max": 100,
      "unit": "s",
      "default": 5,
      "step": 1
    },
    {
      "type": "header",
      "content": "t:sections.announcement-bar.settings.layout_type.carousel.label"
    },
    {
      "type": "checkbox",
      "id": "block_color",
      "label": "t:sections.announcement-bar.settings.block_color.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "autorotate",
      "label": "t:sections.announcement-bar.settings.autorotate.label",
      "default": false
    },
    {
      "type": "range",
      "id": "interval",
      "min": 3,
      "max": 9,
      "step": 2,
      "unit": "s",
      "label": "t:sections.announcement-bar.settings.interval.label",
      "default": 3
    },
    {
      "type": "header",
      "content": "t:global.header.color_section.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "default": "primary",
      "label": "t:global.header.color_scheme.label"
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "announcement_text",
          "label": "t:global.common.general_labels.text",
          "default": "Add announcement text here"
        },
        {
          "type": "header",
          "content": "t:global.header.color_section.label"
        },
        {
          "type": "paragraph",
          "content": "t:sections.announcement-bar.blocks.settings.type.label"
        },
        {
          "type": "color",
          "id": "background_color",
          "label": "t:global.common.general_labels.background",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "t:global.common.general_labels.text",
          "default": "#FFFFFF"
        },
        {
          "type": "color",
          "id": "link_color",
          "label": "t:global.common.general_labels.link",
          "default": "#000000"
        }
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "announcement"
      }
    ]
  }
}
{% endschema %}
 